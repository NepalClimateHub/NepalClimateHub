---
import "../styles/global.css";
import { Icon } from "astro-icon/components";

//sample event JSON event
import eventJSON from "../data/events.json";
const {startIndex, endIndex, title} = Astro.props;

---

<div class="section-container">
	<h2 class="section-heading">{title}</h2>

	<!-- container to wrap event cards -->

	<!-- render the event from eventJSON -->
	<div class="event-container">
		{
			eventJSON.slice(startIndex, endIndex).map((event) => (
			<a class="event-card" href={`/events/${event.slug}`}>
					<div class="logo-wrapper">
						<img src={event.logoUrl} alt={event.name} />
					</div>
					<div class="details">
						<h3 class="event-name">{event.name}</h3>
						<p class="location">
							<span class="icon">
								<Icon name="mdi:my-location" class="icon" />
							</span>
							<span class="address">{event.address}</span>
						</p>
						<p class="description">{event.description.substring(0, 108)}...</p>
						<div class="tags">
							{event.tags.slice(0, 3).map((tag: string) => (
								<span class="tag">{tag}</span>
							))}
						</div>
					</div>
				</a>
			))
		}

		<!-- slide control bars for mobile display -->

		<div class="card-controls">
			<span class="bar bar-event-section"></span>
			<span class="bar bar-event-section"></span>
			<span class="bar bar-event-section"></span>
			<span class="bar bar-event-section"></span>
		</div>
	</div>

	<!-- link to redirect landing page of events -->
	<a href="/events" class="cta-link">See All</a>
</div>

<style>
	.section-container {
		margin: 53px auto 83px;
		position: relative;
	}

	.section-heading {
		font-size: 24px;
		font-weight: 700px;
		line-height: 32px;
		margin-bottom: 24px;
	}

	.event-container {
		display: flex;
		justify-content: center;
		gap: 16px;
	}

	.event-card {
		width: 100%;
		overflow: hidden;
		border-radius: 8px;
		background-color: #F8F9FA;
		transition: transform 0.3s ease-in-out;
		cursor: pointer;
		text-decoration: none;
    color: #1a1b1e;
	}

	.event-card:hover {
		outline: 1px solid #1a1b1e;
	}

	.logo-wrapper {
		height: 189px;
		width: 100%;
		background-color: white;
	}

	.logo-wrapper img {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}

	.event-card .details {
		margin: 16px 12px;
	}

	.event-name {
		font-weight: 700;
		line-height: 20px;
		margin-bottom: 12px;
	}

	.location {
		color: #364fc7;
		font-size: 14px;
		line-height: 16px;
		margin-bottom: 12px;
		display: flex;
		align-items: center;
		gap: 5px;
	}

	.location .icon {
		line-height: 16px;
		display: block;
	}

	.event-card .description {
		font-size: 14px;
		line-height: 18px;
		margin-bottom: 12px;
	}

	.tags {
		display: flex;
		flex-wrap: wrap;
		gap: 8px;
	}

	.tag {
		display: inline-block;
		font-size: 12px;
		color: #364fc7;
		line-height: 14px;
		padding: 5px 12px;
		border: 1px solid #cefe00;
		border-radius: 16px;
	}

	.cta-link {
		display: block;
		position: absolute;
		top: 10px;
		right: 0;
		color: #364fc7;
		font-size: 12px;
	}

	.card-controls {
		position: absolute;
		bottom: -60px;
		left: 50%;
		transform: translateX(-50%);
		display: flex;
		gap: 8px;
		opacity: 0;
	}

	.card-controls .bar {
		display: block;
		width: 25px;
		height: 5px;
		border-radius: 2px;
		background-color: #1a1b1e;
		opacity: 0.5;
		cursor: pointer;
	}

	.card-controls .bar.active {
		opacity: 1;
	}

	@media screen and (max-width: 1024px) {
		.event-container {
			flex-wrap: wrap;
		}

		.event-card {
			width: calc(50% - 8px);
		}

		.logo-wrapper {
			height: 224px;
		}
	}

	@media screen and (max-width: 768px) {
		.section-container {
			margin: 24px 32px 64px;
		}

		.event-container {
			overflow: hidden;
			justify-content: flex-start;
			flex-wrap: nowrap;
			gap: 0px;
			max-width: 364px;
			margin: 0 auto;
		}

		.event-card {
			min-width: 100%;
		}

		.logo-wrapper {
			height: 189px;
		}

		.card-controls {
			opacity: 1;
			bottom: -32px;
		}
	}
</style>

<script>
	// reuse the slider function
	import { slider } from "../utils/slider.ts";

	// function to initialize the slider after DOM is fully loaded
	const initSlider = () => {
		const cards = document.querySelectorAll<HTMLElement>(".event-card");
		const slideControlButtons = document.querySelectorAll<HTMLElement>(
			".bar-event-section"
		);

		slider(cards, slideControlButtons);
	};

	// execute the function once the DOM is loaded
	window.addEventListener("DOMContentLoaded", initSlider);
</script>
