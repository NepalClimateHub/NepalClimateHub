---
import '../styles/global.css';

// import card container styles(reusing)
import '../styles/components/FeaturedCardStyles.css';

import { Icon } from 'astro-icon/components';

// import opportunityJSON from '../data/opportunitiesTemp.json';
import { fetchOpportunities } from '../api';
import logo from '../assets/logo/mainLogo.svg';

const { data: opportunityJSON } = await fetchOpportunities();
const { startIndex, endIndex, title } = Astro.props;

// Create slugs for the opportunities
import { createSlug } from '../utils/slug';
---

<<<<<<< HEAD
<div class="!max-w-7xl !mx-auto !px-6 lg:!px-8 md:!px-6 sm:!px-4 !my-20">
  <div class="!mb-8 !flex !items-end !justify-between">
    <div class="!text-left">
      <h2 class="!text-4xl lg:!text-3xl md:!text-2xl !font-bold !text-gray-900">{title}</h2>
      <p class="!text-lg !text-gray-600 !max-w-2xl">Discover amazing opportunities to contribute to climate action and make a difference</p>
    </div>
    <a href="/opportunities" class="!text-sm !font-medium !text-emerald-700 hover:!text-emerald-800 !transition-colors">View all</a>
  </div>
=======
<div class="section-container featured-card-section">
  <h2 class="section-heading">{title}</h2>
>>>>>>> 16356427a1f07d790e165a9d45665f7bebce0471

  <!-- container to wrap opportunity cards -->

  <!-- render the opportunities from opportunityJSON -->
  <div class="cards-container" style="margin-bottom:72px;">
    {
<<<<<<< HEAD
      opportunityJSON.slice(0, 3).map((item) => (
        <article class="group !bg-white !rounded-2xl !shadow-lg hover:!shadow-2xl !transition-all !duration-300 hover:!-translate-y-2 !border !border-gray-100 !overflow-hidden !min-h-[500px]">
          <!-- Image Section -->
          <div class="!relative !overflow-hidden !h-48 !bg-gradient-to-br !from-teal-50 !to-cyan-50">
=======
      opportunityJSON.slice(startIndex, endIndex).map((item) => (
        <a
          class="card opportunity-card"
          href={`/opportunities/${createSlug(item.title)}`}
        >
          <div class="img-wrapper" style="padding: 0px;">
>>>>>>> 16356427a1f07d790e165a9d45665f7bebce0471
            <img
              src={item.bannerImageUrl ||logo.src}
              alt={item.title}
              style="object-fit: cover;"
            />
          </div>
<<<<<<< HEAD

          <!-- Content Section -->
          <div class="!p-6 !flex !flex-col !h-full">
            <div class="!flex-1 !max-h-[220px]">
              <h3 class="!text-xl !font-bold !text-gray-900 !mb-3 group-hover:!text-emerald-600 !transition-colors !duration-300 !overflow-hidden" style="display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical;">
                {item.title}
              </h3>
              
              <!-- Location -->
              <div class="!flex !items-center !mb-4">
                <div class="!flex !items-center !text-emerald-600 !font-medium">
                  <Icon name="mdi:my-location" class="!w-4 !h-4 !mr-2" />
                  <span class="!text-sm">{item.locationType}</span>
                </div>
              </div>

              <!-- Description -->
              <div class="!text-gray-600 !text-sm !mb-4 !leading-relaxed !overflow-hidden" style="display: -webkit-box; -webkit-line-clamp: 3; -webkit-box-orient: vertical;" set:html={item.description.substring(0, 108) + '...'}></div>

              <!-- Tags -->
              <div class="!flex !flex-wrap !gap-2 !mb-4">
                {(item.tags?.map((tag: any) => tag.tag) || item.category || []).slice(0, 3).map((tag: string, index: number) => (
                  <span class="!inline-flex !items-center !px-3 !py-1 !text-xs !font-medium !bg-teal-50 !text-emerald-700 !border !border-emerald-200 !rounded-full">
                    {tag}
                  </span>
                ))}
              </div>
            </div>

            <!-- View Details Button - Always at bottom -->
            <div class="!mt-6 !pt-4">
              <a 
                href={`/opportunities/${createSlug(item.title)}`}
                class="!inline-flex !items-center !justify-center !text-emerald-600 !font-medium !text-sm !py-2 !px-4 !rounded-lg !border !border-emerald-200 hover:!bg-emerald-50 hover:!border-emerald-300 hover:!text-emerald-700 !transition-all !duration-200 !w-full"
              >
                <span>Read more</span>
                <Icon name="mdi:arrow-right" class="!w-4 !h-4 !ml-2 group-hover:!translate-x-1 !transition-transform !duration-200" />
              </a>
=======
          <div class="details">
            <h3 class="name">{item.title}</h3>
            <p class="location">
              <span class="icon">
                <Icon name="mdi:my-location" class="icon" />
              </span>
              <span class="address">{item.locationType}</span>
            </p>
            <p class="about" set:html={item.description.substring(0, 108) + '...'} style="font-style: normal;" ></p>
            <div class="tags">
              {(item.tags?.map((tag: any) => tag.tag) || item.category || []).slice(0, 3).map((tag: string, index: number) => (
                <span class="tag">{tag}</span>
              ))}
>>>>>>> 16356427a1f07d790e165a9d45665f7bebce0471
            </div>
          </div>
        </a>
      ))
    }

    <!-- slide control bars for mobile display -->

    <div class="card-controls opportunity-card-controls">
      <span class="bar bar-opportunity-section"></span>
      <span class="bar bar-opportunity-section"></span>
      <span class="bar bar-opportunity-section"></span>
      <span class="bar bar-opportunity-section"></span>
    </div>
  </div>
<<<<<<< HEAD
=======

  <!-- link to redirect landing page of opportunities -->
  <a href="/opportunities" class="cta-link">See All</a>
>>>>>>> 16356427a1f07d790e165a9d45665f7bebce0471
</div>

<style>
  .featured-card-section {
    margin: 53px auto 40px auto;
  }

  @media screen and (max-width: 768px) {
    .featured-card-section {
      margin: 24px 32px 64px;
    }
  }
</style>

<script>
  import { createMobileSlider } from "../utils/slider";

  // Get the necessary elements
  const cards = document.querySelectorAll<HTMLElement>(".opportunity-card");
  const cardControlsElement = document.querySelector<HTMLElement>(
    ".opportunity-card-controls"
  );
  const bars = cardControlsElement?.querySelectorAll<HTMLElement>(
    ".bar-opportunity-section"
  );

  // Check if cardControlsElement and bars are not null
  if (cardControlsElement && bars) {
    // Call the function to create the mobile slider
    createMobileSlider(cards, bars);
  }
</script>
