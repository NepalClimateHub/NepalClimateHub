---
export const prerender = false;
import "../styles/global.css";
import BaseLayout from "../layouts/Layout.astro";
import Header from "@components/Header.astro";
import VolunteerSection from "@components/VolunteerSection.astro";
import Footer from "@components/Footer.astro";

// script for form processing
// function to validate our email
import isValidEmail from "../utils/isValidEmail.js";

let isFormSubmitted = false;

// used to file processing, image processing in our case
import { promises as fs } from "fs";
import { join } from "path";

const errors = {
	name: "",
	email: "",
	"current-residence": "",
	"linkedin-url": "",
	bio: "",
	experience: "",
	motivation: "",
	file: "",
	cv: "",
};

if (Astro.request.method === "POST") {
	try {
		const data = await Astro.request.formData();
		const name = data.get("name");
		const email = data.get("email");
		const currentResidence = data.get("current-residence");
		const linkedinUrl = data.get("linkedin-url");
		const role = data.get("role");
		const bio = data.get("bio");
		const experience = data.get("experience");
		const motivation = data.get("motivation");
		const image = data.get("file");
		const cv = data.get("cv");

		if (typeof name !== "string" || name.length < 1) {
			errors.name += "Please enter your full name. ";
		}

		if (typeof email !== "string" || !isValidEmail(email)) {
			errors.email += "Email is not valid. ";
		}

		if (typeof currentResidence !== "string" || currentResidence.length < 1) {
			errors["current-residence"] += "Please enter your current residence. ";
		}

		if (typeof linkedinUrl !== "string" || linkedinUrl.length < 1) {
			errors["linkedin-url"] += "Please enter your LinkedIn profile URL. ";
		}

		if (typeof bio !== "string" || bio.length < 1) {
			errors.bio += "Please enter your bio. ";
		}

		if (typeof experience !== "string" || experience.length < 1) {
			errors.experience += "Please enter your experience. ";
		}

		if (typeof motivation !== "string" || motivation.length < 1) {
			errors.motivation += "Please enter your motivation. ";
		}

		if (typeof cv !== "string" || cv.length < 1) {
			errors.cv += "Please enter the link to your CV. ";
		}

		const saveImage = async (image: File) => {
			// Define the base path for your images
			const basePath = join(process.cwd(), "src", "assets", "formImages"); // Adjusted path
			const imagePath = join(basePath, image.name);

			// Ensure the directory exists
			await fs.mkdir(basePath, { recursive: true });

			// Write the file
			await fs.writeFile(imagePath, Buffer.from(await image.arrayBuffer()));
		};

		if (image instanceof File) {
			await saveImage(image);
		}

		const hasErrors = Object.values(errors).some((msg) => msg);
		if (!hasErrors) {
			// Process form data

			// make a api post request to save our data

			// currently log the data in console
			console.log("name: " + name);
			console.log("residence: " + currentResidence);
			console.log("linkedin: " + linkedinUrl);
			console.log("email: " + email);
			console.log("role " + role);
			console.log("bio: " + bio);
			console.log("experience: " + experience);
			console.log("motivation: " + motivation);
			console.log("file: " + image);
			console.log("cv: " + cv);

			// set up the cookies values
			Astro.cookies.set("successType", "volunteerProfile", {
				path: "/success",
			});

			return Astro.redirect("/success");
		}
	} catch (error) {
		if (error instanceof Error) {
			console.error(error.message);
		}
	}
}
---

<BaseLayout title="Nepal Climate Hub">
	<main class="main-container">
		<!-- header section  -->

		<section class="header-section">
			<Header logoColor="#1A1B1E" />

			<!-- a mini navbar -->
			<div class="mini-nav">
				<a href="/">Home</a>
			</div>
		</section>

		<section class="volunteer-section">
			<VolunteerSection />
		</section>

		<section class="volunteer-form-section">
			<div class="section-container">
				<!-- form application -->
				{
					!isFormSubmitted && (
						<div class="form-application-section">
							<h3 class="sub-heading">Application</h3>
							<p>Ready to Make a Difference? Apply Now!</p>

							<form method="POST" enctype="multipart/form-data">
								<div class="form-field">
									<label for="name">Full Name</label>
									<input type="text" name="name" required />
									{errors.name && <p class="errorMessage">{errors.name}</p>}
								</div>

								<div class="form-field">
									<label for="email">Email Address</label>
									<input type="email" name="email" required />
									{errors.email && <p class="errorMessage">{errors.email}</p>}
								</div>

								<div class="form-field">
									<label for="current-residence">Current Residence</label>
									<input type="text" name="current-residence" required />
									{errors["current-residence"] && (
										<p class="errorMessage">{errors["current-residence"]}</p>
									)}
								</div>

								<div class="form-field">
									<label for="linkedin-url">LinkedIn Profile</label>
									<input type="text" name="linkedin-url" required />
									{errors["linkedin-url"] && (
										<p class="errorMessage">{errors["linkedin-url"]}</p>
									)}
								</div>

								<div class="form-field">
									<p>Which volunteer position are you interested in?</p>
									<div class="radio-field">
										<input
											type="radio"
											name="role"
											id="climate-educator"
											value="Climate Educator"
										/>
										<label for="climate-educator">Climate Educator</label>
									</div>

									<div class="radio-field">
										<input
											type="radio"
											name="role"
											id="climate-content-editor"
											value="Climate Content Editor"
										/>
										<label for="climate-content-editor">
											Climate Content Editor
										</label>
									</div>

									<div class="radio-field">
										<input
											type="radio"
											name="role"
											id="social-media-specialist"
											value="Social Media Specialist"
										/>
										<label for="social-media-specialist">
											Social Media Specialist
										</label>
									</div>

									<div class="radio-field">
										<input
											type="radio"
											name="role"
											id="communication-and-outreach-coordinator"
											value="Communications and Outreach Coordinator"
										/>
										<label for="communication-and-outreach-coordinator">
											Communications and Outreach Coordinator
										</label>
									</div>

									<div class="radio-field">
										<input
											type="radio"
											name="role"
											id="designer"
											value="UI/UX Designer"
										/>
										<label for="designer">UI/UX Designer</label>
									</div>

									<div class="radio-field">
										<input
											type="radio"
											name="role"
											id="software-engineer"
											value="Software Engineer"
										/>
										<label for="software-engineer">Software Engineer</label>
									</div>
								</div>

								<div class="form-field">
									<label for="bio">
										Tell us about your current occupation and short bio (200
										words max)
									</label>
									<textarea id="bio" name="bio" required />
									{errors.bio && <p class="errorMessage">{errors.bio}</p>}
								</div>

								<div class="form-field">
									<label for="experience">
										Do you have any prior experience relevant to your
										volunteering position? Additionally, please share any
										relevant credentials, qualifications, conferences, training,
										certificates, etc if you have.
									</label>
									<textarea id="experience" name="experience" required />
									{errors.experience && (
										<p class="errorMessage">{errors.experience}</p>
									)}
								</div>

								<div class="form-field">
									<label for="motivation">
										Motivation to contribute to Nepal Climate Hub:
									</label>
									<textarea id="motivation" name="motivation" required />
									{errors.motivation && (
										<p class="errorMessage">{errors.motivation}</p>
									)}
								</div>

								<div class="form-field">
									<label for="file">Upload a Picture</label>
									<input type="file" id="file" name="file" required />
									{errors.file && <p class="errorMessage">{errors.file}</p>}
								</div>

								<div class="form-field">
									<label for="cv">Link to your CV</label>
									<input type="text" id="cv" name="cv" required />
									{errors.cv && <p class="errorMessage">{errors.cv}</p>}
								</div>

								<div class="form-field">
									<label for="comments">Any questions or comments: </label>
									<textarea id="comments" name="comment" />
								</div>

								<input type="submit" />
							</form>
						</div>
					)
				}
			</div>
		</section>

		<section class="footer-section">
			<Footer />
		</section>
	</main>
</BaseLayout>

<style>
	section {
		padding: 0px 48px;
	}

	.footer-section {
		background-color: #1a1b1e;
		color: white;
	}

	@media screen and (max-width: 768px) {
		section {
			padding: 0px;
		}
	}

	/* styles for the form section */
	.section-container {
		max-width: 760px;
		margin: 48px auto 40px;
	}

	.sub-heading {
		font-size: 24px;
		line-height: 32px;
		font-weight: 700;
		margin-bottom: 8px;
	}

	/* .form-application-section {
		padding: 24px 24px;
		border-radius: 8px;
	} */

	form {
		width: 100%;
		margin: 24px auto 0px;
	}

	.form-field {
		margin-bottom: 16px;
	}

	.form-field label {
		display: block;
		margin-bottom: 8px;
	}

	.form-field input[type="text"],
	.form-field input[type="email"],
	.form-field input[type="file"],
	.form-field textarea {
		width: 100%;
		padding: 8px;
		margin-bottom: 8px;
		border: 1px solid #ccc;
		border-radius: 4px;
		box-sizing: border-box;
		transition: border-color 0.3s;
		border: none;
		outline: 1px solid black;
		background-color: #f9f9f9;
	}

	.form-field input[type="text"]:hover,
	.form-field input[type="email"]:hover,
	.form-field input[type="file"]:hover,
	.form-field textarea:hover,
	.form-field input[type="text"]:focus,
	.form-field input[type="email"]:focus,
	.form-field input[type="file"]:focus,
	.form-field textarea:focus {
		outline: 2px solid black;
	}

	.radio-field {
		display: flex;
		align-items: center;
		margin-bottom: 8px;
	}

	.radio-field input[type="radio"] {
		margin-right: 8px;
	}

	.radio-field label {
		margin: 0;
	}

	.form-field textarea {
		height: 100px;
		resize: vertical;
	}

	.form-field p {
		margin-bottom: 8px;
	}

	input[type="submit"] {
		min-width: 200px;
		margin: 0 auto;
		display: block;
		padding: 8px 16px;
		line-height: 16px;
		border-radius: 8px;
		text-decoration: none;
		font-size: 14px;
		color: #25262b;
		background-color: #cefe00;
		transition: all 0.3s ease;
		font-weight: 400;
		cursor: pointer;
		margin-bottom: 100px;
	}

	input[type="submit"]:hover {
		background-color: black;
		color: white;
	}

	.errorMessage {
		color: red;
		font-style: italic;
	}

	/* style for responsiveness */

	@media screen and (max-width: 768px) {
		.section-container {
			margin: 24px 24px 32px;
		}
	}
</style>
