---
import '../../styles/global.css';
import ConnectCard from '../../components/ConnectCard.astro';
import FeaturedEventSection from '../../components/FeaturedEventSection.astro';
import Footer from '../../components/Footer.astro';
import Header from '../../components/Header.astro';
import CardDetailSection from '../../layouts/CardDetailSection.astro';
// import eventsTemp from '../../data/eventsTemp.json';
import BaseLayout from '../../layouts/Layout.astro';
import type { Event as ApiEvent } from '../../types/event';
import { fetchEvents } from '../../utils/api';
import { createSlug } from '../../utils/slug';
// import eventJSON from '../../data/dummy-event.json';

function stripHtml(html: string) {
  return html.replace(/<[^>]*>/g, '');
}

const { eventDetail } = Astro.params;

let apiEvent: ApiEvent | null = null;
let allEvents: ApiEvent[] = [];

try {
  const response = await fetchEvents();
  allEvents = response.data || [];
  apiEvent = allEvents.find(
    (event) => createSlug(event.title) === eventDetail
  ) || null;
} catch (error) {
  console.error('Error fetching events:', error);
  // Fallback to empty data if API fails
  allEvents = [];
  apiEvent = null;
}

if (!apiEvent) {
  throw new Error(`Event with slug ${eventDetail} not found`);
}

const eventData = {
  ...apiEvent,
  bannerImage: apiEvent.bannerImageUrl,
  description: apiEvent.description || '',
  location:
    apiEvent.locationType.charAt(0).toUpperCase() +
    apiEvent.locationType.slice(1).toLowerCase(),
  province: apiEvent.address?.state || '',
  category: apiEvent.tags?.map((tag: any) => tag.tag) || [],
};
---

<BaseLayout title={`${eventData.title} | Nepal Climate Hub`}>
  <main class="main-container">
    <!-- header section  -->
    <section class="header-section">
      <Header logoColor="#1A1B1E" />

      <!-- a mini navbar -->
      <div class="mini-nav">
        <a href="/">Home</a>
        <span style="color: #364FC7">/</span>
        <a href="/events">Events</a>
      </div>
    </section>

    <section class="organization-card-section">
      <CardDetailSection cardId={0} organization="false" dataObj={eventData} />
    </section>

    <section class="connect-card-section">
      <ConnectCard cardId={0} organization="false" dataObj={eventData} />
    </section>

    <section class="organization-section">
      <FeaturedEventSection
        startIndex={0}
        endIndex={4}
        title="Join other events"
        currentEventId={apiEvent.id}
      />
    </section>

    <section class="footer-section">
      <Footer />
    </section>
  </main>
</BaseLayout>

<style>
  section {
    padding: 0px 48px;
  }

  .connect-card-section {
    background-color: #cefe00;
  }

  .footer-section {
    background-color: #1a1b1e;
    color: white;
  }

  @media screen and (max-width: 768px) {
    section {
      padding: 0px;
    }
  }
</style>
