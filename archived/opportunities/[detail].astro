---
export const prerender = true;

import '../../styles/global.css';
import ConnectCard from '@components/ConnectCard.astro';
import FeaturedOpportunitySection from '@components/FeaturedOpportunitySection.astro';
import Footer from '@components/Footer.astro';
import Header from '@components/Header.astro';
import CardDetailSection from '@layouts/CardDetailSection.astro';
import opportunitiesTemp from '../../data/opportunitiesTemp.json';
import BaseLayout from '../../layouts/Layout.astro';
import type {
  Opportunity as ApiOpportunity,
  OpportunityTag,
} from '../../types/opportunity';
import { fetchOpportunities } from '../../utils/api';
import { createSlug } from '../../utils/slug';

export async function getStaticPaths() {
  // const { data: opportunities } = await fetchOpportunities();

  return opportunitiesTemp.map((opportunity) => {
    const slug = createSlug(opportunity.title);
    return {
      params: { detail: slug },
    };
  });
}

function stripHtml(html: string) {
  return html.replace(/<[^>]*>/g, '');
}

const { detail } = Astro.params;

// const { data: allOpportunities } = await fetchOpportunities();
const apiOpportunity = opportunitiesTemp.find(
  (opportunity) => createSlug(opportunity.title) === detail
);

if (!apiOpportunity) {
  throw new Error(`Opportunity with slug ${detail} not found`);
}

const opportunityDetail = {
  ...apiOpportunity,
  bannerImage: apiOpportunity.bannerImageUrl || '/placeholder.svg',
  description: stripHtml(apiOpportunity.description || '') || '',
  location:
    apiOpportunity.locationType.charAt(0).toUpperCase() +
    apiOpportunity.locationType.slice(1).toLowerCase(),
  province: apiOpportunity.address?.state || '',
  category: apiOpportunity.category,
};
---

<BaseLayout title={`${opportunityDetail.title} | Nepal Climate Hub`}>
  <main class="main-container">
    <!-- Header Section -->
    <section class="header-section">
      <Header logoColor="#1A1B1E" />
      <div class="mini-nav">
        <a href="/">Home</a>
        <span style="color: #364FC7">/</span>
        <a href="/opportunities">Opportunities</a>
      </div>
    </section>

    <section class="organization-card-section">
      <CardDetailSection
        cardId={0}
        organization="false"
        dataObj={opportunityDetail}
      />
    </section>

    <section class="connect-card-section">
      <ConnectCard
        cardId={0}
        organization="false"
        dataObj={opportunityDetail}
      />
    </section>

    <section class="organization-section">
      <FeaturedOpportunitySection
        startIndex={0}
        endIndex={4}
        title="Other Opportunities"
        currentOpportunityId={apiOpportunity.id}
      />
    </section>

    <section class="footer-section">
      <Footer />
    </section>
  </main>
</BaseLayout>

<style>
  section {
    padding: 0px 48px;
  }

  .connect-card-section {
    background-color: #cefe00;
  }

  .footer-section {
    background-color: #1a1b1e;
    color: white;
  }

  .application {
    margin: 18px 12%;
  }

  .application-text {
    margin-top: 10px;
    margin-bottom: 10px;
  }

  .application-button {
    background-color: #4258c8;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .application-button:hover {
    background-color: #364fc7;
  }

  @media screen and (max-width: 768px) {
    section {
      padding: 0px;
    }
    .application {
      margin: 18px 20px;
      padding: 10px 12px;
    }
  }
</style>
